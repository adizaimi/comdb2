#!/usr/bin/env bash

dbname=$1
error=0

if [[ -z "$dbname" ]]; then
    echo dbname missing
    exit 1
fi


# if we have disabled cnonce, blkseq will contain uuids
if [[ "$TESTCASE" != "blkseq_nocnonce_generated" ]] ; then
    # verify content of comdb2_blkseq
    N=10
    i=0
    while [ $i -lt $N ] ; do
        cdb2sql ${CDB2_OPTIONS} ${DBNAME} default "create table tt${i} (i int primary key)"
        let i=i+1
    done
    ${TESTSBUILDDIR}/inscntdel --dbname $DBNAME --numthreads $N --iterations 100 --printcnonce > out.txt
    grep "insert\|delete" out.txt | cut -f 3 -d= | sort -n > cnonce.should
    cdb2sql --tabs ${CDB2_OPTIONS} ${DBNAME} default "select id from comdb2_blkseq" | sort -n > cnonce.have
    for i in `cat cnonce.should` ;  do
        cnt=`grep -c $i cnonce.have`
        if [ $cnt != 1 ] ; then
            echo "blkseq keys (cnonces) don't match what they should (cnonce.have vs cnonce.should)"
            exit 1
            break;
        fi
    done

fi


function replay_count
{
    master=`cdb2sql -tabs ${CDB2_OPTIONS} $dbname default 'exec procedure sys.cmd.send("bdb cluster")' | grep MASTER | cut -f1 -d":" | tr -d '[:space:]'`
    echo $(cdb2sql -tabs ${CDB2_OPTIONS} $dbname --host $master default 'exec procedure sys.cmd.send("stat replay")' | egrep 'Blkseq-replay-count:' | awk '{print $2}')
}

cdb2sql -tabs ${CDB2_OPTIONS} $dbname default 'create table t1 { schema { int a } }'
cdb2sql -tabs ${CDB2_OPTIONS} $dbname default 'create table t2 { schema { int a } keys { "a" = a } }'

if [[ $TESTCASE == "blkseq_snapiso_generated" ]] ; then
    echo "
set hasql on
set transaction serializable" > insert.t1
else
    echo "set transaction read committed" > insert.t1
fi
cp insert.t1 insert.t2
echo "insert into t1 values (1)" >> insert.t1
echo "insert into t2 values (1)" >> insert.t2

rcount=$(replay_count) ; i=0
echo "Replay count is $rcount"
while [[ $i -lt 1000 ]]; do
    out=$(cdb2sql ${CDB2_OPTIONS} $dbname default - < insert.t1 2>&1)
    echo "$out" | egrep "insert into t1 values \(1\)] rc 0" &> /dev/null

    if [[ $? != 0 ]]; then
        echo "Unexpected output inserting a row into t1"
        echo "$out"
        error=1
        break 2
    fi

    echo $out ; let i=i+1
done

if [[ "$(replay_count)" == "$rcount" ]]; then
    echo "Didn't trip replay in table t1, failing test"
    error=1
fi

cdb2sql -s ${CDB2_OPTIONS} $dbname default - < insert.t2 &> /dev/null

rcount=$(replay_count) ; i=0
echo "Replay count is $rcount"
while [[ $i -lt 1000 ]]; do
    out=$(cdb2sql ${CDB2_OPTIONS} $dbname default - < insert.t2 2>&1)
    echo "$out" | egrep "failed with rc 299" &> /dev/null

    if [[ $? != 0 ]]; then
        echo "Unexpected output inserting a row into t2"
        echo "$out"
        error=1
        break 2
    fi

    let i=i+1
done

if [[ "$(replay_count)" == "$rcount" ]]; then
    echo "Didn't trip replay in table t2, failing test"
    error=1
fi


if [[ "$error" == 0 ]]; then
    echo "success"
    exit 0
else
    echo "failed"
    exit 1
fi
